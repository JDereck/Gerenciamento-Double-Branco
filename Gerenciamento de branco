<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <title>Login Sistema</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <style>
    body { font-family: Arial; padding: 20px; background: #f5f5f5; margin: 0; }
    .login-box, .app { max-width: 700px; margin: auto; background: white; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
    .app { display: none; }
    input, button, select { width: 100%; padding: 10px; margin-top: 10px; }
    .error { color: red; margin-top: 10px; }
    .header { display: flex; justify-content: space-between; align-items: center; }
    .theme-toggle { background: none; border: none; font-size: 24px; cursor: pointer; }
    .resultado-texto { background-color: #dff9fb; padding: 10px; border-radius: 5px; margin-top: 15px; font-weight: bold; }
    table { width: 100%; border-collapse: collapse; margin-top: 20px; }
    th, td { border: 1px solid #ccc; padding: 8px; text-align: center; }
    th { background-color: #ecf0f1; }
    .destacado { background-color: #f1c40f; font-weight: bold; }
  </style>
</head>
<body>

<!-- LOGIN -->
<div class="login-box" id="loginBox">
  <h2>Login</h2>
  <input type="text" id="login" placeholder="Login ou Email" />
  <input type="password" id="senha" placeholder="Senha" />
  <button onclick="verificarLogin()">Entrar</button>
  <div class="error" id="erroLogin"></div>
</div>

<!-- APP -->
<div class="app" id="app">
  <div class="header">
    <h1>Gerenciamento de Banca</h1>
    <button class="theme-toggle" onclick="toggleTheme()" id="temaBtn">üåô</button>
  </div>

  <label for="modo">Escolha o Modo de C√°lculo:</label>
  <select id="modo" onchange="renderInputs()">
    <option value="valor">Valor Desejado</option>
    <option value="entrada">N√∫mero de Jogadas</option>
    <option value="porcentagem">Porcentagem de Lucro</option>
  </select>

  <div id="inputs"></div>
  <button onclick="calcular()">Calcular</button>
  <div id="resultado"></div>
</div>

<script>
  const urlCSV = "https://docs.google.com/spreadsheets/d/e/2PACX-1vTVhFQrV60brKd7u2YARKxg2t-UQJcct9g-ZM1CBf6YYNMvEjAgM_ZmDDlgZ9r3PfjzpHP9bcZbJozi/pub?gid=0&single=true&output=csv";

  function parseDataBR(dataStr) {
    const [dia, mes, ano] = dataStr.trim().split("/");
    return new Date(`${ano}-${mes}-${dia}T23:59:59`);
  }

  async function verificarLogin() {
    const loginInput = document.getElementById("login").value.trim().toLowerCase();
    const senhaInput = document.getElementById("senha").value.trim();
    const erroDiv = document.getElementById("erroLogin");
    erroDiv.innerText = "Verificando...";

    try {
      const response = await fetch(urlCSV);
      const csvText = await response.text();
      const rows = csvText.split("\n").slice(1);
      const hoje = new Date();

      for (let row of rows) {
        const cols = row.split(",");
        if (cols.length < 5) continue;

        const loginCSV = cols[1].trim().toLowerCase();
        const senhaCSV = cols[2].trim();
        const validadeStr = cols[4].trim();
        const validade = parseDataBR(validadeStr);

        if (loginInput === loginCSV && senhaInput === senhaCSV) {
          if (validade >= hoje) {
            document.getElementById("loginBox").style.display = "none";
            document.getElementById("app").style.display = "block";
            return;
          } else {
            erroDiv.innerText = "Acesso expirado em " + validadeStr;
            return;
          }
        }
      }

      erroDiv.innerText = "Login ou senha inv√°lidos.";
    } catch (err) {
      erroDiv.innerText = "Erro ao verificar login.";
      console.error(err);
    }
  }

  function toggleTheme() {
    document.body.classList.toggle("dark-mode");
    document.getElementById("temaBtn").textContent = document.body.classList.contains("dark-mode") ? "‚òÄÔ∏è" : "üåô";
  }

  function renderInputs() {
    const modo = document.getElementById("modo").value;
    const inputsDiv = document.getElementById("inputs");
    let html = '';
    if (modo === 'valor') {
      html += 'Banca: <input id="banca" type="number" step="0.01">';
      html += 'Valor que deseja ganhar: <input id="ganho" type="number" step="0.01">';
      html += 'Quantidade de acertos: <input id="acertos" type="number">';
    } else if (modo === 'entrada') {
      html += 'Banca: <input id="banca" type="number" step="0.01">';
      html += 'Quantidade de jogadas desejadas: <input id="jogadas" type="number">';
    } else if (modo === 'porcentagem') {
      html += 'Banca: <input id="banca" type="number" step="0.01">';
      html += 'Porcentagem de lucro: <input id="porcentagem" type="number">';
      html += 'Quantidade de acertos: <input id="acertos" type="number">';
    }
    inputsDiv.innerHTML = html;
  }

  renderInputs();

  function calcular() {
    const modo = document.getElementById("modo").value;
    const banca = parseFloat(document.getElementById("banca").value);
    const resultadoDiv = document.getElementById("resultado");
    resultadoDiv.innerHTML = '';
    let linhas = [], totalAcumulado = 0, suportaJogadas = 0;
    const apostaMinima = 0.10;

    if (modo === 'valor') {
      const ganho = parseFloat(document.getElementById("ganho").value);
      const acertos = parseInt(document.getElementById("acertos").value);
      let entrada = (ganho / 13) / acertos;
      if (entrada < apostaMinima) entrada = apostaMinima;
      const lucroPorAcerto = entrada * 13;
      const lucroEsperado = lucroPorAcerto * acertos;

      for (let i = 1; i <= 200; i++) {
        if (i > 1) entrada *= 1.077;
        totalAcumulado += entrada;
        if (totalAcumulado <= banca) suportaJogadas = i;
        linhas.push({ i, entrada, total: totalAcumulado });
      }

      if (suportaJogadas === 0) {
        resultadoDiv.innerHTML = `<div class='resultado-texto'>Banca insuficiente. Banca necess√°ria: R$ ${totalAcumulado.toFixed(2)}</div>`;
        return;
      }

      resultadoDiv.innerHTML = `<div class='resultado-texto'>
        Lucro no acerto: R$ ${lucroPorAcerto.toFixed(2)}<br>
        Lucro esperado: R$ ${lucroEsperado.toFixed(2)}<br>
        Banca suporta at√© ${suportaJogadas} jogadas.
      </div>`;
    }

    else if (modo === 'entrada') {
      const jogadas = parseInt(document.getElementById("jogadas").value);
      let entrada = apostaMinima;

      for (let i = 1; i <= jogadas; i++) {
        if (i > 1) entrada *= 1.077;
        totalAcumulado += entrada;
        if (totalAcumulado <= banca) suportaJogadas = i;
        linhas.push({ i, entrada, total: totalAcumulado });
      }

      resultadoDiv.innerHTML = `<div class='resultado-texto'>
        Valor total necess√°rio para ${jogadas} jogadas: R$ ${totalAcumulado.toFixed(2)}<br>
        Sua banca suporta at√© ${suportaJogadas} jogadas.
      </div>`;
    }

    else if (modo === 'porcentagem') {
      const porcentagem = parseFloat(document.getElementById("porcentagem").value);
      const acertos = parseInt(document.getElementById("acertos").value);
      const lucroDesejado = banca * (porcentagem / 100);
      let entrada = (lucroDesejado / 13) / acertos;
      if (entrada < apostaMinima) entrada = apostaMinima;
      const lucroPorAcerto = entrada * 13;
      const lucroTotal = lucroPorAcerto * acertos;

      for (let i = 1; i <= 200; i++) {
        if (i > 1) entrada *= 1.077;
        totalAcumulado += entrada;
        if (totalAcumulado <= banca) suportaJogadas = i;
        linhas.push({ i, entrada, total: totalAcumulado });
      }

      if (suportaJogadas === 0) {
        resultadoDiv.innerHTML = `<div class='resultado-texto'>Banca insuficiente. Banca necess√°ria: R$ ${totalAcumulado.toFixed(2)}</div>`;
        return;
      }

      resultadoDiv.innerHTML = `<div class='resultado-texto'>
        Lucro no acerto: R$ ${lucroPorAcerto.toFixed(2)}<br>
        Lucro total estimado: R$ ${lucroTotal.toFixed(2)}<br>
        Banca suporta at√© ${suportaJogadas} jogadas.
      </div>`;
    }

    // Tabela
    if (linhas.length > 0) {
      let tabela = '<table><tr><th>Jogada</th><th>Valor</th><th>Acumulado</th></tr>';
      linhas.forEach(l => {
        const classe = l.i === suportaJogadas ? 'class="destacado"' : '';
        tabela += `<tr ${classe}><td>${l.i}</td><td>R$ ${l.entrada.toFixed(2)}</td><td>R$ ${l.total.toFixed(2)}</td></tr>`;
      });
      tabela += '</table>';
      resultadoDiv.innerHTML += tabela;
    }
  }
</script>

</body>
</html>
